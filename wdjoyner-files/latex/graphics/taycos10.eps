%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 288 177
%%HiResBoundingBox: 0 0 288 177.938
%%Creator: (Mathematica X 3.0)
%%Title: Clipboard
%%CreationDate: (Sometime) (Sometime)
%%DocumentNeededResources: (atend)
%%DocumentFonts: (atend)
%%DocumentNeededFonts: (atend)
%%EndComments
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def
/Mnodistort true def
/colorimage where
{ pop /Mcolorimage {colorimage} bind def /Mimage {image} bind def}
{
/colorimage {Mcolorimage} bind def
} ifelse
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		288.000000 def
/Mheight	177.937500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.037894 0.412023 0.206011 [
[.12106 .39952 -9 -9 ]
[.12106 .39952 9 0 ]
[.31053 .39952 -6 -9 ]
[.31053 .39952 6 0 ]
[.68947 .39952 -3 -9 ]
[.68947 .39952 3 0 ]
[.87894 .39952 -6 -9 ]
[.87894 .39952 6 0 ]
[.4875 0 -12 -4.5 ]
[.4875 0 0 4.5 ]
[.4875 .10301 -24 -4.5 ]
[.4875 .10301 0 4.5 ]
[.4875 .20601 -12 -4.5 ]
[.4875 .20601 0 4.5 ]
[.4875 .30902 -24 -4.5 ]
[.4875 .30902 0 4.5 ]
[.4875 .51503 -18 -4.5 ]
[.4875 .51503 0 4.5 ]
[.4875 .61803 -6 -4.5 ]
[.4875 .61803 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.12106 .41202 m
.12106 .41827 L
s
[(-10)] .12106 .39952 0 1 Mshowa
.31053 .41202 m
.31053 .41827 L
s
[(-5)] .31053 .39952 0 1 Mshowa
.68947 .41202 m
.68947 .41827 L
s
[(5)] .68947 .39952 0 1 Mshowa
.87894 .41202 m
.87894 .41827 L
s
[(10)] .87894 .39952 0 1 Mshowa
.125 Mabswid
.15895 .41202 m
.15895 .41577 L
s
.19685 .41202 m
.19685 .41577 L
s
.23474 .41202 m
.23474 .41577 L
s
.27264 .41202 m
.27264 .41577 L
s
.34842 .41202 m
.34842 .41577 L
s
.38632 .41202 m
.38632 .41577 L
s
.42421 .41202 m
.42421 .41577 L
s
.46211 .41202 m
.46211 .41577 L
s
.53789 .41202 m
.53789 .41577 L
s
.57579 .41202 m
.57579 .41577 L
s
.61368 .41202 m
.61368 .41577 L
s
.65158 .41202 m
.65158 .41577 L
s
.72736 .41202 m
.72736 .41577 L
s
.76526 .41202 m
.76526 .41577 L
s
.80315 .41202 m
.80315 .41577 L
s
.84105 .41202 m
.84105 .41577 L
s
.08317 .41202 m
.08317 .41577 L
s
.04527 .41202 m
.04527 .41577 L
s
.00738 .41202 m
.00738 .41577 L
s
.91683 .41202 m
.91683 .41577 L
s
.95473 .41202 m
.95473 .41577 L
s
.99262 .41202 m
.99262 .41577 L
s
.25 Mabswid
0 .41202 m
1 .41202 L
s
.5 0 m
.50625 0 L
s
[(-2)] .4875 0 1 0 Mshowa
.5 .10301 m
.50625 .10301 L
s
[(-1.5)] .4875 .10301 1 0 Mshowa
.5 .20601 m
.50625 .20601 L
s
[(-1)] .4875 .20601 1 0 Mshowa
.5 .30902 m
.50625 .30902 L
s
[(-0.5)] .4875 .30902 1 0 Mshowa
.5 .51503 m
.50625 .51503 L
s
[(0.5)] .4875 .51503 1 0 Mshowa
.5 .61803 m
.50625 .61803 L
s
[(1)] .4875 .61803 1 0 Mshowa
.125 Mabswid
.5 .0206 m
.50375 .0206 L
s
.5 .0412 m
.50375 .0412 L
s
.5 .0618 m
.50375 .0618 L
s
.5 .0824 m
.50375 .0824 L
s
.5 .12361 m
.50375 .12361 L
s
.5 .14421 m
.50375 .14421 L
s
.5 .16481 m
.50375 .16481 L
s
.5 .18541 m
.50375 .18541 L
s
.5 .22661 m
.50375 .22661 L
s
.5 .24721 m
.50375 .24721 L
s
.5 .26781 m
.50375 .26781 L
s
.5 .28842 m
.50375 .28842 L
s
.5 .32962 m
.50375 .32962 L
s
.5 .35022 m
.50375 .35022 L
s
.5 .37082 m
.50375 .37082 L
s
.5 .39142 m
.50375 .39142 L
s
.5 .43262 m
.50375 .43262 L
s
.5 .45322 m
.50375 .45322 L
s
.5 .47383 m
.50375 .47383 L
s
.5 .49443 m
.50375 .49443 L
s
.5 .53563 m
.50375 .53563 L
s
.5 .55623 m
.50375 .55623 L
s
.5 .57683 m
.50375 .57683 L
s
.5 .59743 m
.50375 .59743 L
s
.25 Mabswid
.5 0 m
.5 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .61803 m
.02499 .61793 L
.02605 .61767 L
.02729 .61717 L
.02846 .61649 L
.03053 .6148 L
.03279 .61228 L
.03527 .60869 L
.0379 .60396 L
.04262 .59318 L
.05205 .56342 L
.06244 .51992 L
.08274 .41523 L
.09394 .35512 L
.10458 .30247 L
.11464 .26054 L
.11995 .24251 L
.12562 .22696 L
.12831 .221 L
.13085 .21626 L
.13333 .21249 L
.1356 .20978 L
.13777 .20787 L
.13886 .20716 L
.14005 .20658 L
.14125 .2062 L
.14254 .20602 L
.14376 .20607 L
.14487 .2063 L
.14605 .20674 L
.14715 .20733 L
.14837 .20818 L
.14967 .20934 L
.15234 .21243 L
.15478 .21613 L
.15925 .22499 L
.16395 .23712 L
.17387 .27123 L
.18471 .31941 L
.20596 .43147 L
.22527 .52905 L
.23491 .56794 L
.23999 .58452 L
.24536 .5987 L
.25006 .60804 L
.25273 .61202 L
.25401 .61358 L
.25522 .61484 L
.25632 .6158 L
.25751 .61665 L
Mistroke
.2586 .61725 L
.25961 .61766 L
.26081 .61795 L
.26189 .61803 L
.26314 .61792 L
.26432 .61762 L
.26549 .61711 L
.26674 .61636 L
.26899 .61444 L
.27167 .61123 L
.27411 .60744 L
.27942 .59643 L
.28444 .58268 L
.2933 .5513 L
.30292 .50868 L
.32234 .40704 L
.33266 .35188 L
.34376 .29754 L
.35435 .25473 L
.35898 .23967 L
.36405 .22617 L
.36637 .22107 L
.36886 .21642 L
.371 .21307 L
.37332 .21017 L
.37469 .20882 L
.37595 .2078 L
.37716 .20704 L
.37844 .20647 L
.37958 .20615 L
.38065 .20602 L
.38182 .20607 L
.38307 .20633 L
.38429 .20681 L
.38498 .20717 L
.38563 .20758 L
.38835 .20992 L
.3907 .21279 L
.39323 .21673 L
.399 .22893 L
.40429 .24386 L
.41408 .27986 L
.4244 .32724 L
.44435 .43302 L
.46248 .52504 L
.47187 .56385 L
.47682 .58069 L
.48207 .59539 L
.48473 .60154 L
.48767 .60722 L
Mistroke
.49037 .61141 L
.49283 .61436 L
.49405 .6155 L
.49537 .6165 L
.49609 .61694 L
.49676 .61728 L
.49745 .61757 L
.49809 .61777 L
.49934 .618 L
.50047 .61802 L
.50169 .61783 L
.50301 .61739 L
.50425 .61674 L
.50538 .61596 L
.50793 .61354 L
.51029 .61049 L
.51252 .60689 L
.51752 .59639 L
.52296 .58136 L
.53391 .54091 L
.54403 .49392 L
.5643 .38613 L
.57422 .3341 L
.58332 .291 L
.592 .25629 L
.5966 .24113 L
.6015 .22771 L
.60409 .22185 L
.60644 .2173 L
.60884 .21344 L
.61104 .21059 L
.61352 .2082 L
.61483 .20729 L
.6155 .20692 L
.61621 .20659 L
.61741 .2062 L
.61853 .20603 L
.61922 .20601 L
.61987 .20606 L
.62109 .20631 L
.62234 .20679 L
.62304 .20716 L
.62369 .20756 L
.62614 .20961 L
.62836 .21221 L
.63071 .21569 L
.6356 .22534 L
.64095 .23947 L
.65048 .27289 L
.65935 .31197 L
Mistroke
.69833 .51466 L
.70854 .5585 L
.71392 .57753 L
.71963 .59406 L
.72461 .60513 L
.72744 .60995 L
.7301 .61346 L
.73135 .61477 L
.73253 .61582 L
.73361 .61659 L
.73476 .61723 L
.736 .61772 L
.73715 .61797 L
.73786 .61803 L
.73852 .61802 L
.73977 .61783 L
.74093 .61746 L
.74217 .61684 L
.74335 .61606 L
.74442 .61517 L
.74704 .61232 L
.74952 .60873 L
.75446 .59911 L
.75984 .58505 L
.76943 .55153 L
.77831 .51253 L
.79855 .40697 L
.81756 .30855 L
.8264 .27016 L
.83572 .23807 L
.84059 .22535 L
.84317 .21985 L
.84593 .21496 L
.84847 .21138 L
.85078 .20891 L
.8519 .20798 L
.8531 .20718 L
.85425 .20661 L
.8553 .20626 L
.85655 .20604 L
.85774 .20604 L
.8588 .20621 L
.85997 .20658 L
.86123 .20721 L
.86257 .20812 L
.86499 .21041 L
.86744 .21357 L
.86974 .2173 L
.87405 .22618 L
.87922 .24 L
Mistroke
.88397 .25552 L
.89469 .29913 L
.91514 .40373 L
.93422 .50406 L
.94365 .54662 L
.95257 .57929 L
.9575 .59348 L
.9601 .59974 L
.96286 .60541 L
.96517 .60939 L
.96773 .61292 L
.96885 .61418 L
.97005 .61533 L
.97109 .61617 L
.97223 .61691 L
.97323 .61741 L
.97416 .61774 L
.97514 .61796 L
.97619 .61803 L
Mfstroke
.17774 0 m
.18154 .07816 L
.18681 .167 L
.19646 .29226 L
.20672 .39106 L
.21569 .45883 L
.22514 .5161 L
.23523 .56319 L
.2397 .57948 L
.24448 .59374 L
.24719 .60034 L
.24964 .6054 L
.25214 .60964 L
.25444 .61273 L
.25573 .61411 L
.25713 .61534 L
.25855 .61628 L
.25932 .61667 L
.26005 .61695 L
.26073 .61715 L
.26138 .61727 L
.2626 .61732 L
.26391 .61714 L
.26465 .61692 L
.26534 .61665 L
.26663 .61595 L
.26799 .61495 L
.27043 .61249 L
.27306 .6089 L
.27593 .60386 L
.28109 .59205 L
.2859 .578 L
.30452 .5009 L
.3232 .40241 L
.34348 .29878 L
.35454 .25405 L
.3594 .23843 L
.36476 .22453 L
.36719 .21945 L
.3698 .21486 L
.37206 .21165 L
.37453 .20896 L
.3759 .20784 L
.37717 .20704 L
.37786 .2067 L
.37851 .20644 L
.37926 .20622 L
.37994 .20608 L
.38118 .20602 L
.38232 .20615 L
Mistroke
.38357 .2065 L
.3842 .20677 L
.3849 .20713 L
.3862 .20798 L
.3874 .20899 L
.39013 .21202 L
.39253 .21555 L
.39508 .22017 L
.3995 .23021 L
.40438 .24415 L
.41516 .28441 L
.42529 .33165 L
.44374 .42975 L
.4542 .48502 L
.46394 .5316 L
.47443 .57287 L
.479 .5872 L
.48396 .59985 L
.48669 .60545 L
.4892 .60972 L
.49161 .613 L
.49415 .61559 L
.49544 .61655 L
.49616 .61697 L
.49683 .61731 L
.49814 .61779 L
.49934 .618 L
.50003 .61803 L
.50076 .61799 L
.50207 .61773 L
.50288 .61744 L
.50363 .61709 L
.50505 .61621 L
.50621 .61527 L
.50746 .61405 L
.50971 .61131 L
.51482 .60247 L
.52022 .58939 L
.52514 .57432 L
.54362 .49596 L
.56433 .38594 L
.57344 .33806 L
.58349 .29026 L
.59244 .25474 L
.59714 .23949 L
.60209 .22631 L
.60463 .22075 L
.6074 .21566 L
.60996 .21191 L
.61228 .20929 L
Mistroke
.61343 .20827 L
.61467 .20738 L
.61599 .20668 L
.61723 .20625 L
.61839 .20604 L
.61963 .20604 L
.62068 .2062 L
.62184 .20657 L
.62313 .20721 L
.62433 .20801 L
.62706 .21059 L
.62946 .21373 L
.63201 .21794 L
.63689 .22842 L
.6413 .24052 L
.65207 .2794 L
.6622 .32574 L
.68063 .42318 L
.69108 .47878 L
.70082 .52612 L
.71129 .56852 L
.71585 .58345 L
.72081 .59681 L
.72353 .6028 L
.72605 .60745 L
.7286 .61128 L
.731 .61404 L
.73221 .61512 L
.73351 .61604 L
.73425 .61646 L
.73496 .61678 L
.73559 .617 L
.73629 .61718 L
.73702 .6173 L
.73769 .61733 L
.73847 .61729 L
.73919 .61716 L
.74049 .61675 L
.74122 .6164 L
.74189 .61602 L
.74316 .61511 L
.74435 .61404 L
.74659 .61144 L
.749 .60782 L
.75162 .6029 L
.75634 .59151 L
.76071 .57809 L
.77073 .53713 L
.78137 .47809 L
.79073 .41182 L
Mistroke
.80083 .3211 L
.81036 .20798 L
.81911 .066 L
Mfstroke
.81911 .066 m
.82223 0 L
s
% End of Graphics
MathPictureEnd
%%PSTrailer
end
grestore

%%EPS Trailer
